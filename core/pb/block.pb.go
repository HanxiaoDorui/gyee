// Code generated by protoc-gen-go. DO NOT EDIT.
// source: block.proto

package corepb

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Account struct {
	// account transaction nonce start from 0
	Nonce uint64 `protobuf:"varint,1,opt,name=nonce,proto3" json:"nonce,omitempty"`
	// account balance encoded big-endian bytes with math/big/Int.Bytes()
	Balance              []byte   `protobuf:"bytes,2,opt,name=balance,proto3" json:"balance,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Account) Reset()         { *m = Account{} }
func (m *Account) String() string { return proto.CompactTextString(m) }
func (*Account) ProtoMessage()    {}
func (*Account) Descriptor() ([]byte, []int) {
	return fileDescriptor_block_f1094286dd33e853, []int{0}
}
func (m *Account) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Account.Unmarshal(m, b)
}
func (m *Account) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Account.Marshal(b, m, deterministic)
}
func (dst *Account) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Account.Merge(dst, src)
}
func (m *Account) XXX_Size() int {
	return xxx_messageInfo_Account.Size(m)
}
func (m *Account) XXX_DiscardUnknown() {
	xxx_messageInfo_Account.DiscardUnknown(m)
}

var xxx_messageInfo_Account proto.InternalMessageInfo

func (m *Account) GetNonce() uint64 {
	if m != nil {
		return m.Nonce
	}
	return 0
}

func (m *Account) GetBalance() []byte {
	if m != nil {
		return m.Balance
	}
	return nil
}

// signature for a block header or transaction
type Signature struct {
	// signer address
	// may be omitted if address can be inferred from signature
	Signer []byte `protobuf:"bytes,1,opt,name=signer,proto3" json:"signer,omitempty"`
	// signature algorithm
	// may be omitted for default algorithm
	SigAlgorithm uint32 `protobuf:"varint,2,opt,name=sigAlgorithm,proto3" json:"sigAlgorithm,omitempty"`
	// encoded signature bytes
	Signature            []byte   `protobuf:"bytes,3,opt,name=signature,proto3" json:"signature,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Signature) Reset()         { *m = Signature{} }
func (m *Signature) String() string { return proto.CompactTextString(m) }
func (*Signature) ProtoMessage()    {}
func (*Signature) Descriptor() ([]byte, []int) {
	return fileDescriptor_block_f1094286dd33e853, []int{1}
}
func (m *Signature) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Signature.Unmarshal(m, b)
}
func (m *Signature) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Signature.Marshal(b, m, deterministic)
}
func (dst *Signature) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Signature.Merge(dst, src)
}
func (m *Signature) XXX_Size() int {
	return xxx_messageInfo_Signature.Size(m)
}
func (m *Signature) XXX_DiscardUnknown() {
	xxx_messageInfo_Signature.DiscardUnknown(m)
}

var xxx_messageInfo_Signature proto.InternalMessageInfo

func (m *Signature) GetSigner() []byte {
	if m != nil {
		return m.Signer
	}
	return nil
}

func (m *Signature) GetSigAlgorithm() uint32 {
	if m != nil {
		return m.SigAlgorithm
	}
	return 0
}

func (m *Signature) GetSignature() []byte {
	if m != nil {
		return m.Signature
	}
	return nil
}

type Transaction struct {
	// chain ID
	ChainID uint32 `protobuf:"varint,1,opt,name=chainID,proto3" json:"chainID,omitempty"`
	// transaction nonce
	Nonce uint64 `protobuf:"varint,2,opt,name=nonce,proto3" json:"nonce,omitempty"`
	// transaction recipient
	Recipient []byte `protobuf:"bytes,3,opt,name=recipient,proto3" json:"recipient,omitempty"`
	// transaction amount
	Amount []byte `protobuf:"bytes,4,opt,name=amount,proto3" json:"amount,omitempty"`
	// signature with LAST MESSAGE TAG of one byte
	Signature            *Signature `protobuf:"bytes,15,opt,name=signature,proto3" json:"signature,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *Transaction) Reset()         { *m = Transaction{} }
func (m *Transaction) String() string { return proto.CompactTextString(m) }
func (*Transaction) ProtoMessage()    {}
func (*Transaction) Descriptor() ([]byte, []int) {
	return fileDescriptor_block_f1094286dd33e853, []int{2}
}
func (m *Transaction) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Transaction.Unmarshal(m, b)
}
func (m *Transaction) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Transaction.Marshal(b, m, deterministic)
}
func (dst *Transaction) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Transaction.Merge(dst, src)
}
func (m *Transaction) XXX_Size() int {
	return xxx_messageInfo_Transaction.Size(m)
}
func (m *Transaction) XXX_DiscardUnknown() {
	xxx_messageInfo_Transaction.DiscardUnknown(m)
}

var xxx_messageInfo_Transaction proto.InternalMessageInfo

func (m *Transaction) GetChainID() uint32 {
	if m != nil {
		return m.ChainID
	}
	return 0
}

func (m *Transaction) GetNonce() uint64 {
	if m != nil {
		return m.Nonce
	}
	return 0
}

func (m *Transaction) GetRecipient() []byte {
	if m != nil {
		return m.Recipient
	}
	return nil
}

func (m *Transaction) GetAmount() []byte {
	if m != nil {
		return m.Amount
	}
	return nil
}

func (m *Transaction) GetSignature() *Signature {
	if m != nil {
		return m.Signature
	}
	return nil
}

// message for
//   block header
//   bloom filter for related addresses
//   multiple signatures from validator
type SignedBlockHeader struct {
	// embedded encoded block header
	Header []byte `protobuf:"bytes,1,opt,name=header,proto3" json:"header,omitempty"`
	// block tx bloom filter
	Bloom []byte `protobuf:"bytes,2,opt,name=bloom,proto3" json:"bloom,omitempty"`
	// header signature for hash(hash(header) + bloom)
	Signatures           []*Signature `protobuf:"bytes,3,rep,name=signatures,proto3" json:"signatures,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *SignedBlockHeader) Reset()         { *m = SignedBlockHeader{} }
func (m *SignedBlockHeader) String() string { return proto.CompactTextString(m) }
func (*SignedBlockHeader) ProtoMessage()    {}
func (*SignedBlockHeader) Descriptor() ([]byte, []int) {
	return fileDescriptor_block_f1094286dd33e853, []int{3}
}
func (m *SignedBlockHeader) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SignedBlockHeader.Unmarshal(m, b)
}
func (m *SignedBlockHeader) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SignedBlockHeader.Marshal(b, m, deterministic)
}
func (dst *SignedBlockHeader) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SignedBlockHeader.Merge(dst, src)
}
func (m *SignedBlockHeader) XXX_Size() int {
	return xxx_messageInfo_SignedBlockHeader.Size(m)
}
func (m *SignedBlockHeader) XXX_DiscardUnknown() {
	xxx_messageInfo_SignedBlockHeader.DiscardUnknown(m)
}

var xxx_messageInfo_SignedBlockHeader proto.InternalMessageInfo

func (m *SignedBlockHeader) GetHeader() []byte {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *SignedBlockHeader) GetBloom() []byte {
	if m != nil {
		return m.Bloom
	}
	return nil
}

func (m *SignedBlockHeader) GetSignatures() []*Signature {
	if m != nil {
		return m.Signatures
	}
	return nil
}

type Block struct {
	Header               *SignedBlockHeader `protobuf:"bytes,1,opt,name=header,proto3" json:"header,omitempty"`
	Transactions         []*Transaction     `protobuf:"bytes,2,rep,name=transactions,proto3" json:"transactions,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *Block) Reset()         { *m = Block{} }
func (m *Block) String() string { return proto.CompactTextString(m) }
func (*Block) ProtoMessage()    {}
func (*Block) Descriptor() ([]byte, []int) {
	return fileDescriptor_block_f1094286dd33e853, []int{4}
}
func (m *Block) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Block.Unmarshal(m, b)
}
func (m *Block) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Block.Marshal(b, m, deterministic)
}
func (dst *Block) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Block.Merge(dst, src)
}
func (m *Block) XXX_Size() int {
	return xxx_messageInfo_Block.Size(m)
}
func (m *Block) XXX_DiscardUnknown() {
	xxx_messageInfo_Block.DiscardUnknown(m)
}

var xxx_messageInfo_Block proto.InternalMessageInfo

func (m *Block) GetHeader() *SignedBlockHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *Block) GetTransactions() []*Transaction {
	if m != nil {
		return m.Transactions
	}
	return nil
}

func init() {
	proto.RegisterType((*Account)(nil), "corepb.Account")
	proto.RegisterType((*Signature)(nil), "corepb.Signature")
	proto.RegisterType((*Transaction)(nil), "corepb.Transaction")
	proto.RegisterType((*SignedBlockHeader)(nil), "corepb.SignedBlockHeader")
	proto.RegisterType((*Block)(nil), "corepb.Block")
}

func init() { proto.RegisterFile("block.proto", fileDescriptor_block_f1094286dd33e853) }

var fileDescriptor_block_f1094286dd33e853 = []byte{
	// 314 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x6c, 0x52, 0xbb, 0x6a, 0xf3, 0x30,
	0x18, 0xc5, 0xb9, 0x92, 0xcf, 0x0e, 0x3f, 0xd1, 0x5f, 0x8a, 0x0a, 0x19, 0x8c, 0xa7, 0x4c, 0x29,
	0x49, 0x87, 0xd2, 0x31, 0xa5, 0x43, 0xbb, 0xaa, 0x7d, 0x01, 0x59, 0x11, 0x8e, 0xa8, 0x23, 0x05,
	0x49, 0x79, 0xa3, 0x3e, 0x68, 0x91, 0x14, 0xd9, 0x32, 0x74, 0xf3, 0x39, 0xe8, 0x3b, 0x37, 0x0c,
	0x79, 0xdd, 0x2a, 0xf6, 0xbd, 0xbd, 0x68, 0x65, 0x15, 0x9a, 0x31, 0xa5, 0xf9, 0xa5, 0xae, 0x5e,
	0x60, 0x7e, 0x60, 0x4c, 0x5d, 0xa5, 0x45, 0x77, 0x30, 0x95, 0x4a, 0x32, 0x8e, 0xb3, 0x32, 0xdb,
	0x4c, 0x48, 0x00, 0x08, 0xc3, 0xbc, 0xa6, 0x2d, 0x75, 0xfc, 0xa8, 0xcc, 0x36, 0x05, 0x89, 0xb0,
	0xe2, 0xb0, 0xf8, 0x14, 0x8d, 0xa4, 0xf6, 0xaa, 0x39, 0xba, 0x87, 0x99, 0x11, 0x8d, 0xe4, 0xda,
	0x5f, 0x17, 0xe4, 0x86, 0x50, 0x05, 0x85, 0x11, 0xcd, 0xa1, 0x6d, 0x94, 0x16, 0xf6, 0x74, 0xf6,
	0x1a, 0x4b, 0x32, 0xe0, 0xd0, 0x1a, 0x16, 0x26, 0x0a, 0xe1, 0xb1, 0x3f, 0xef, 0x89, 0xea, 0x27,
	0x83, 0xfc, 0x4b, 0x53, 0x69, 0x28, 0xb3, 0x42, 0x49, 0x17, 0x88, 0x9d, 0xa8, 0x90, 0x1f, 0x6f,
	0xde, 0x6a, 0x49, 0x22, 0xec, 0x0b, 0x8c, 0xd2, 0x02, 0x6b, 0x58, 0x68, 0xce, 0xc4, 0x45, 0x70,
	0x69, 0xa3, 0x7a, 0x47, 0xb8, 0xdc, 0xf4, 0xec, 0xea, 0xe3, 0x49, 0xc8, 0x1d, 0x10, 0x7a, 0x4c,
	0x33, 0xfd, 0x2b, 0xb3, 0x4d, 0xbe, 0x5f, 0x6d, 0xc3, 0x66, 0xdb, 0xae, 0x75, 0x1a, 0xd3, 0xc2,
	0xca, 0xf1, 0xfc, 0xf8, 0xea, 0x56, 0x7e, 0xe7, 0xf4, 0xc8, 0xb5, 0x53, 0x3f, 0xf9, 0xaf, 0xb8,
	0x4a, 0x40, 0x2e, 0x69, 0xdd, 0x2a, 0x75, 0xbe, 0x4d, 0x1a, 0x00, 0xda, 0x01, 0x74, 0x7a, 0x06,
	0x8f, 0xcb, 0xf1, 0xdf, 0xa6, 0xc9, 0xa3, 0xca, 0xc0, 0xd4, 0xfb, 0xa1, 0xdd, 0xc0, 0x29, 0xdf,
	0x3f, 0xa4, 0x77, 0x83, 0x50, 0x5d, 0x88, 0x67, 0x28, 0x6c, 0xbf, 0xab, 0xc1, 0x23, 0x6f, 0xf8,
	0x3f, 0x1e, 0x26, 0x9b, 0x93, 0xc1, 0xc3, 0x7a, 0xe6, 0x7f, 0xa1, 0xa7, 0xdf, 0x00, 0x00, 0x00,
	0xff, 0xff, 0x87, 0xcb, 0xf8, 0xba, 0x51, 0x02, 0x00, 0x00,
}
